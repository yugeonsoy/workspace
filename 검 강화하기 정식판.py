import random

def 강화_확률(단계):
    확률_목록 = [0.7, 0.5, 0.35, 0.2, 0.15]
    return 확률_목록[단계]

def 검_이름(단계):
    이름_목록 = [
        "초보자의 검",        # 1단계
        "탐험가의 곡괭이",    # 2단계
        "무술사의 너클",      # 3단계
        "용맹한 전사의 검",  # 4단계
        "드래곤이 깃든 어둠의 검" # 5단계
    ]
    return 이름_목록[단계] if 단계 < len(이름_목록) else "최대 단계의 검"

def 강화_검(현재단계, 실패횟수, 보호권):
    if 현재단계 >= 5:
        return f"{검_이름(현재단계)}의 강화 단계는 이미 최대입니다.", 실패횟수, 보호권, 현재단계
    
    성공확률 = 강화_확률(현재단계)
    if random.random() <= 성공확률:
        새로운단계 = 현재단계 + 1
        return f"검 강화 성공! (현재 검 등급: {검_이름(새로운단계)})", 0, 보호권, 새로운단계
    else:
        실패횟수 += 1
        if 실패횟수 % 3 == 0:
            if 보호권 > 0:
                보호권 -= 1
                return f"검이 깨졌다 (강화실패). 보호권을 사용하였습니다! 현재 보호권 수: {보호권}", 실패횟수, 보호권, 현재단계
            else:
                return "검이 깨졌다 (강화실패). 보호권이 부족합니다.", 실패횟수, 보호권, 현재단계
        else:
            return "검이 깨졌다 (강화실패)", 실패횟수, 보호권, 현재단계

def main():
    현재단계 = 0
    실패횟수 = 0
    보호권 = 0  # 초기 보호권 수

    print(f"초기 보호권 수: {보호권}")

    while 현재단계 < 5:
        print(f"현재 단계: {현재단계 + 1}단계 ({검_이름(현재단계)})")
        input("강화 하려면 Enter를 누르세요...")
        결과, 실패횟수, 보호권, 다음단계 = 강화_검(현재단계, 실패횟수, 보호권)
        print(결과)
        
        if "보호권" in 결과:
            보호권 += 1
        if "강화 성공" in 결과:
            현재단계 = 다음단계
        elif "강화실패" in 결과:
            실패횟수 = 실패횟수

    if 현재단계 == 5:
        print(f"{검_이름(현재단계)}은 이미 최대 단계입니다.")
    print(f"최종 보호권 수: {보호권}")

if __name__ == "__main__":
    main()
